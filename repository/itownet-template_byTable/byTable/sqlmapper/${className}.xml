<#include "/macro.include"/>
<#assign className = table.className>
<#assign classNameLower = className?uncap_first>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="${className}" >
    <typeAlias alias="${className}" type="${basepackage}.model.${namespace}.${className}" />
    
    
    <resultMap class="${className}" id="baseMap">
        <#list table.columns as column>
        <result column="${column}" property="${column.columnNameLower}"/>
        </#list>
    </resultMap>

  
    <!-- 找到所有记录 -->
    <select id="selectAll" resultMap="baseMap" resultClass="${className}">
        select * from ${table.sqlName}
    </select>

    <select id="selectByPK" resultMap="baseMap" parameterClass="<#list table.columns as column><#if column.pk>${column.javaType}</#if></#list>"
            resultClass="${className}">
        SELECT * FROM ${table.sqlName}
        WHERE
            <#list table.columns as column>
              <#if column.pk>
            ${column} = #${column.columnNameLower}#
              </#if>
            </#list>
    </select>

    <insert id="insert" parameterClass="${className}" >
        INSERT INTO ${table.sqlName} (
<#list table.columns as column>
            ${column.sqlName} <#if column_has_next>,</#if>
</#list>
        ) VALUES (
<#list table.columns as column>
            #${column.columnNameLower}# <#if column_has_next>,</#if>
</#list>
        )
        <selectKey <#list table.columns as column><#if column.pk>resultClass="${column.javaType}" keyProperty="${column.columnNameLower}"</#if></#list>>
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="updateByPK" parameterClass="${className}" >
        UPDATE ${table.sqlName}
        SET
<#list table.notPkColumns as column>
          ${column.sqlName} = #${column.columnNameLower}# <#if column_has_next>,</#if>
</#list>
        WHERE
<#list table.compositeIdColumns as column>
          ${column.sqlName} = #${column.columnNameLower}# <#if column_has_next>,</#if>
</#list>
        </update>

    <delete id="delete" parameterClass="<#list table.columns as column><#if column.pk>${column.javaType}</#if></#list>" >
        DELETE FROM ${table.sqlName} WHERE
<#list table.compositeIdColumns as column>
        ${column.sqlName} = #${column.columnNameLower}# <#if column_has_next>,</#if>
</#list>
    </delete>


</sqlMap>